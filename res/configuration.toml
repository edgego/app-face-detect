    MaxEventSize = 0
    [Writable]
       LogLevel = 'INFO'
       [Writable.InsecureSecrets]
          [Writable.InsecureSecrets.DB]
             path = "redisdb"
             [Writable.InsecureSecrets.DB.Secrets]
               username = ""
               password = ""
       [Writable.Reading]
          ReadingUnits = true
    [Service]
       HealthCheckInterval = '10s'
       Host = 'app-face-detect'
       Port = 48098
       ServerBindAddr = '0.0.0.0'
       StartupMsg = 'app-face-detect started'
       MaxRequestSize = 0
       RequestTimeout = '5s'
       [Service.CORSConfiguration]
          EnableCORS = false
          CORSAllowCredentials = false
          CORSAllowedOrigin = "https://localhost"
          CORSAllowedMethods = "GET, POST, PUT, PATCH, DELETE"
          CORSAllowedHeaders = "Authorization, Accept, Accept-Language, Content-Language, Content-Type, X-Correlation-ID"
          CORSExposeHeaders = "Cache-Control, Content-Language, Content-Length, Content-Type, Expires, Last-Modified, Pragma, X-Correlation-ID"
          CORSMaxAge = 3600
    [Registry]
       Host = 'localhost'
       Port = 8500
       Type = 'consul'
    [Clients]
        [Clients.core-data]
          Protocol = 'http'
          Host = 'edge-core-data'
          Port = 59880
       [Clients.core-metadata]
          Protocol = 'http'
          Host = 'edge-core-metadata'
          Port = 59881
    [MessageQueue]
       Protocol = 'redis'
       Host = 'edge-redis-ha-announce-0'
       Port = 6379
       Type = 'redis'
       AuthMode = 'usernamepassword'
       SecretName = "redisdb"
       PublishTopicPrefix = 'edgex/events/device'
    [SecretStore]
       Type = 'vault'
       Host = 'edge-vault'
       Port = 8200
       Path = 'app-face-detect/'
       Protocol = 'http'
       RootCaCertPath = ''
       ServerName = ''
       TokenFile = '/tmp/edgex/secrets/app-face-detect/secrets-token.json'
       [SecretStore.Authentication]
         AuthType = 'X-Vault-Token'
    [Device]
       DataTransform = true
       MaxCmdOps = 128
       MaxCmdValueLen = 256
       ProfilesDir = ''
       DevicesDir = ''
       UpdateLastConnected = true
       Labels = []
       EnableAsyncReadings = true
       AsyncBufferSize = 16
       UseMessageBus = true
       [Device.Discovery]
          Enabled = false
          Interval = "1h"
    [ApplicationSettings]
       DeviceNames = "camera1,camera2"
    [Trigger]
      Type="edgex-messagebus"
      [Trigger.EdgexMessageBus]
        Type = "redis"
        [Trigger.EdgexMessageBus.SubscribeHost]
           Host = "edge-redis-ha-announce-0"
           Port = 6379
           Protocol = "redis"
           SubscribeTopics="edgex/events/#"
        [Trigger.EdgexMessageBus.PublishHost]
          Host = "edge-redis-ha-announce-0"
          Port = 6379
          Protocol = "redis"
          PublishTopic="rules-events"
        [Trigger.EdgexMessageBus.Optional]
          authmode = "usernamepassword"  # required for redis messagebus (secure or insecure).
          secretname = "redisdb"
          # Default MQTT Specific options that need to be here to enable evnironment variable overrides of them
          ClientId ="app-rules-engine"
          Qos =  "0" # Quality of Sevice values are 0 (At most once), 1 (At least once) or 2 (Exactly once)
          KeepAlive =  "10" # Seconds (must be 2 or greater)
          Retained = "false"
          AutoReconnect = "true"
          ConnectTimeout = "5" # Seconds
          SkipCertVerify = "false"
          # Default NATS Specific options that need to be here to enable evnironment variable overrides of them
          Format = "nats"
          RetryOnFailedConnect = "true"
          QueueGroup = ""
          Durable = ""
          AutoProvision = "true"
          Deliver = "new"
          DefaultPubRetryAttempts = "2"
          Subject = "edgex/#" # Required for NATS Jetstram only for stream autoprovsioning
